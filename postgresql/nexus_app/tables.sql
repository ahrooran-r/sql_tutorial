-- create database ahrooran;

create schema if not exists nexus;

create table if not exists nexus.countries
(
    id   integer generated by default as identity,
    name character varying(60) not null unique,
    primary key (id)
);

create table if not exists nexus.users
(
    id              integer generated by default as identity,
    name            character varying(255) not null,
    email           character varying(255) not null unique,
    password        character varying(255) not null,
    description     character varying(600) null,
    country_id      integer,
    created_on      timestamp              not null default now(),
    last_updated_on timestamp              not null default now(),
    is_deleted      boolean                not null default false,
    is_enabled      boolean                not null default false,
    primary key (id),
    foreign key (country_id) references nexus.countries (id)
);

create table if not exists nexus.tokens
(
    id           integer generated by default as identity,
    user_id      integer,
    created_on   timestamp   not null default now(),
    expires_on   timestamp   not null,
    confirmed_on timestamp   null,
    token_id        uuid unique not null,
    primary key (id),
    foreign key (user_id) references nexus.users (id)
);

create table if not exists nexus.articles
(
    id              integer generated by default as identity,
    title           character varying(100) not null,
    summary         character varying(350),
    content         text                   null,
    created_on      timestamp              not null default now(),
    last_updated_on timestamp              not null default now(),
    user_id         integer,
    is_deleted      boolean                not null default false,
    primary key (id),
    foreign key (user_id) references nexus.users (id)
);

create table if not exists nexus.categories
(
    id   integer generated by default as identity,
    name character varying(50) unique not null,
    primary key (id)
);

create table if not exists nexus.articles_categories
(
    article_id  integer,
    category_id integer,
    foreign key (article_id) references nexus.articles (id) on delete cascade,
    foreign key (category_id) references nexus.categories (id) on delete cascade
);

create table if not exists nexus.users_categories
(
    user_id     integer,
    category_id integer,
    foreign key (user_id) references nexus.users (id) on delete cascade,
    foreign key (category_id) references nexus.categories (id) on delete cascade
);